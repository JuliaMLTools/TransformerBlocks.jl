var documenterSearchIndex = {"docs":
[{"location":"#TransformerBlocks.jl","page":"TransformerBlocks.jl","title":"TransformerBlocks.jl","text":"","category":"section"},{"location":"#Simple,-blazing-fast,-transformer-components.","page":"TransformerBlocks.jl","title":"Simple, blazing fast, transformer components.","text":"","category":"section"},{"location":"#Basic-Usage","page":"TransformerBlocks.jl","title":"Basic Usage","text":"","category":"section"},{"location":"","page":"TransformerBlocks.jl","title":"TransformerBlocks.jl","text":"using TransformerBlocks\n\n# C: input embedding dimension\n# T: block size (sequence length)\n# B: batch size\nC, T, B = 10, 5, 3\nx = rand(Float32, C, T, B)\n\n# Example 1: Transformer block\nblock = Block(C)\n@assert size(block(x)) == (C, T, B)\n\n# Example 2: Block with mask\nusing LinearAlgebra\nmask = (1 .- triu(ones(Float32, T, T))) .* (-1f9)\n@assert size(block(x; mask=mask)) == (C, T, B)\n\n# Example 3: Sequential blocks\nnum_layers = 3\nblocks = BlockList([Block(C) for _ in 1:num_layers])\n@assert size(blocks(x)) == (C, T, B)","category":"page"},{"location":"#Components","page":"TransformerBlocks.jl","title":"Components","text":"","category":"section"},{"location":"","page":"TransformerBlocks.jl","title":"TransformerBlocks.jl","text":"Block","category":"page"},{"location":"#TransformerBlocks.Block","page":"TransformerBlocks.jl","title":"TransformerBlocks.Block","text":"Block\n\nThe basic transformer block.\n\n\n\n\n\n","category":"type"},{"location":"","page":"TransformerBlocks.jl","title":"TransformerBlocks.jl","text":"Block(input_dim; num_heads=1, head_size=(input_dim÷num_heads), dropout=0)","category":"page"},{"location":"#TransformerBlocks.Block-Tuple{Any}","page":"TransformerBlocks.jl","title":"TransformerBlocks.Block","text":"Block(input_dim; num_heads=1, head_size=(input_dim÷num_heads), dropout=0)\n\nCreates a transformer block.\n\n\n\n\n\n","category":"method"},{"location":"","page":"TransformerBlocks.jl","title":"TransformerBlocks.jl","text":"func(x)","category":"page"},{"location":"#TransformerBlocks.func-Tuple{Any}","page":"TransformerBlocks.jl","title":"TransformerBlocks.func","text":"func(x)\n\nReturns double the number a x plus 1.\n\n\n\n\n\n","category":"method"},{"location":"#API-index","page":"TransformerBlocks.jl","title":"API index","text":"","category":"section"},{"location":"","page":"TransformerBlocks.jl","title":"TransformerBlocks.jl","text":"","category":"page"}]
}
